#截屏，取屏幕上的，读出二维码代表的含义
import tkinter,cv2,PIL,numpy
from PIL import Image,ImageDraw,ImageFont,ImageGrab
#from aip import AipOcr
import easygui
import os
   



class OCR():
    #mode=0
    #mouse=False
   
    def __init__(self):
        self.window()

    #创建窗口  
    def window(self):
        window=tkinter.Tk()
        window.wm_attributes('-topmost',1)
        #window.title('转文本')
        position_x=window.winfo_screenwidth()-150
        window.geometry('%dx%d+%d+%d' % (100,30,(window.winfo_screenwidth()-100), (window.winfo_screenheight() - 100) ))
        window.resizable(width=False, height=False)

        button0=tkinter.Button(window, text="二维码", command=self.button_command).pack()
        window.mainloop()


    #点击按钮后，截屏，并全屏显示    
    def button_command(self):
        self.mode=0
        self.mouse=False
        print ('start here')
       
        global img,img_copy
        #filename = 'temp.png'
        im = ImageGrab.grab()
        #im.save(filename)
        #im.close()
        #im=pyautogui.screenshot()
        imgSize=im.size
        font = ImageFont.truetype('simhei.ttf', int((imgSize[0])*0.025))
        draw = PIL.ImageDraw.Draw(im)
        draw.text((imgSize[0]*0.7, (imgSize[1]*0.92)), '拖拽鼠标截图，敲回车键继续', (255,0,0), font=font)
       
        img=numpy.array(im)
        img = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
        img_copy=img.copy()
            #img =  cv2.imread('1.png')
        cv2.namedWindow("ROI selector", cv2.WND_PROP_FULLSCREEN)
        cv2.setWindowProperty("ROI selector",cv2.WND_PROP_FULLSCREEN,cv2.WINDOW_FULLSCREEN)
        r = cv2.selectROI(img_copy)
        imCrop = img_copy[int(r[1]):int(r[1]+r[3]), int(r[0]):int(r[0]+r[2])]
        #cv2.imshow('new',imCrop)
        cv2.destroyAllWindows()
        #cv2.setMouseCallback('window_full',self.mouse_action)
        print ('mid here')
        cv2.imwrite('t.png',imCrop)
        print('finished')
        self.bar3()
    def bar2(self):
        import zxing

        reader = zxing.BarCodeReader()
        barcode = reader.decode("t.png")
        x=barcode.parsed
        if x=='' or x==' ' or x is None or x==" ":
            x="无结果，请重试"
        print("x is:",x,type(x))
        easygui.msgbox(barcode.parsed)
    def bar3(self):
        import pyzbar.pyzbar as pyzbar
        from PIL import Image,ImageEnhance


        image = "t.png"

        img = Image.open(image)

        #img = ImageEnhance.Brightness(img).enhance(2.0)#增加亮度

        #img = ImageEnhance.Sharpness(img).enhance(17.0)#锐利化

        #img = ImageEnhance.Contrast(img).enhance(4.0)#增加对比度

        #img = img.convert('L')#灰度化

        #img.show()

        barcodes = pyzbar.decode(img)

        for barcode in barcodes:
            barcodeData = barcode.data.decode("utf-8")
            print(barcodeData)
            easygui.msgbox(barcodeData)

             




if __name__=='__main__':

    OCR()
